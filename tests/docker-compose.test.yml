services:
  postgres:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: safetrust
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d safetrust"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - safetrust-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "logging_collector=on", "-c", "log_statement=all"]

  graphql-engine:
    image: hasura/graphql-engine:v2.33.4
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/safetrust
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"RS256","jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com","audience": "safetrust-dev", "issuer": "https://securetoken.google.com/safetrust-dev"}'
    restart: always
    networks:
      - safetrust-network

  karate:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - ./:/app
      - ./results:/app/target/karate-reports
    environment:
      HASURA_ENDPOINT: http://graphql-engine:8080/v1/graphql
      HASURA_ADMIN_SECRET: myadminsecretkey
      FIREBASE_PROJECT_ID: safetrust-dev
    depends_on:
      postgres:
        condition: service_healthy
      graphql-engine:
        condition: service_started
    networks:
      - safetrust-network
    tty: true
    stdin_open: true

networks:
  safetrust-network:
    driver: bridge

volumes:
  postgres_data:
